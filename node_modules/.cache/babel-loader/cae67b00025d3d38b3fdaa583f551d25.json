{"ast":null,"code":"var _jsxFileName = \"/home/jack/Documents/HobbyStuff/ShopifyWebDevApplication/ShopifyWebDevApplicationProject/myapp/src/Components/SearchResults.js\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nexport default function SearchResults(props) {\n  console.log(props.movieError);\n\n  function isDisabled(movie) {\n    // theres probably a better way to do this, but I'm low on time\n    for (let item in props.movieNominees) {\n      console.log(item);\n\n      if (item === movie) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Search Results\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, !props.movieError ? props.results.map(movie => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, movie.Title, \", \", movie.Year, \" \", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    size: \"sm\",\n    onClick: () => {\n      props.addToNominationsList(movie);\n    },\n    disabled: isDisabled(movie),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, \"Nominate\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"movie not found\")));\n}","map":{"version":3,"sources":["/home/jack/Documents/HobbyStuff/ShopifyWebDevApplication/ShopifyWebDevApplicationProject/myapp/src/Components/SearchResults.js"],"names":["React","Button","SearchResults","props","console","log","movieError","isDisabled","movie","item","movieNominees","results","map","Title","Year","addToNominationsList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;;AACA,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB;AACA,SAAK,IAAIC,IAAT,IAAiBN,KAAK,CAACO,aAAvB,EAAsC;AACpCN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,UAAIA,IAAI,KAAKD,KAAb,EAAoB;AAClB,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACL,KAAK,CAACG,UAAP,GACCH,KAAK,CAACQ,OAAN,CAAcC,GAAd,CAAmBJ,KAAD,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACK,KADT,QACkBL,KAAK,CAACM,IADxB,EAC8B,GAD9B,eAEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,QADR;AAEE,IAAA,IAAI,EAAE,IAFR;AAGE,IAAA,OAAO,EAAE,MAAM;AACbX,MAAAA,KAAK,CAACY,oBAAN,CAA2BP,KAA3B;AACD,KALH;AAME,IAAA,QAAQ,EAAED,UAAU,CAACC,KAAD,CANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CADD,gBAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBJ,CAFF,CADF;AA0BD","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function SearchResults(props) {\n  console.log(props.movieError);\n  function isDisabled(movie) {\n    // theres probably a better way to do this, but I'm low on time\n    for (let item in props.movieNominees) {\n      console.log(item);\n      if (item === movie) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return (\n    <>\n      <p>Search Results</p>\n      <ul>\n        {!props.movieError ? (\n          props.results.map((movie) => (\n            <li>\n              {movie.Title}, {movie.Year}{\" \"}\n              <Button\n                type={\"button\"}\n                size={\"sm\"}\n                onClick={() => {\n                  props.addToNominationsList(movie);\n                }}\n                disabled={isDisabled(movie)}\n              >\n                Nominate\n              </Button>\n            </li>\n          ))\n        ) : (\n          <p>movie not found</p>\n        )}\n      </ul>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}